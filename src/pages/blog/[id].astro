---
import { type CollectionEntry, getCollection, render } from "astro:content"
import PageLayout from "@layouts/PageLayout.astro"
import Container from "@components/Container.astro"
import FormattedDate from "@components/FormattedDate.astro"
import { readingTime } from "@lib/utils"
import BackToPrev from "@components/BackToPrev.astro"
import { SOCIALS } from "@consts"
import Link from "@components/Link.astro"

export async function getStaticPaths() {
	const posts = (await getCollection("blog"))
		.filter((post) => !post.data.draft)
		.sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())
	return posts.map((post, i) => ({
		params: { id: post.id },
		props: { ...post, next: posts[i + 1], prev: posts[i - 1] },
	}))
}

type Props = CollectionEntry<"blog">

const post = Astro.props

const { Content } = await render(post)
---

<PageLayout title={post.data.title} description={post.data.description}>
	<Container>
		<div class="animate">
			<BackToPrev href="/blog"> Back to blog </BackToPrev>
		</div>
		<div class="space-y-1 my-10">
			<div class="animate flex items-center gap-1.5">
				<div class="font-base text-sm">
					<FormattedDate date={post.data.date} />
				</div>
				&bull;
				<div class="font-base text-sm">
					{readingTime(post.body)}
				</div>
			</div>
			<div
				class="animate text-2xl font-semibold text-black dark:text-white"
			>
				{post.data.title}
			</div>
			<div class="animate text-sm">{post.data.description}</div>
		</div>
		<article class="animate">
			<Content />
		</article>
		<div class="animate mt-10 space-y-10">
			<div
				class="w-1/2 mx-auto border border-black/15 dark:border-white/30"
			>
			</div>
			<div>
				ðŸ’­ I'd love to hear your feedback on this post! Feel free to <Link
					external
					href={SOCIALS[0].HREF}>email me</Link
				> with your thoughts.
			</div>
		</div>
		<div class="animate mt-10 flex flex-col sm:flex-row items-start gap-2">
			{
				post.prev && (
					<BackToPrev href={post.prev.id}>
						<div class="text-sm mb-2">PREV</div>
						<div class="text-xs">{post.prev.data.title}</div>
					</BackToPrev>
				)
			}
			<div class="sm:flex-grow hidden sm:block"></div>
			{
				post.next && (
					<BackToPrev right href={post.next.id}>
						<div class="text-xs mb-2">NEXT</div>
						<div class="text-xs">{post.next.data.title}</div>
					</BackToPrev>
				)
			}
		</div>
	</Container>
</PageLayout>
